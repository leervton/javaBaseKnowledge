package JavaBasicKnowledge.InterfaceKnowledge;
/*
*抽象类可以降低接口实现类与接口之间实现的难度
*   抽象类可以声明抽象方法，也可以生成具体方法
*   抽象类声明抽象方法必须由子类进行重写
*   抽象类实现接口时，不需要对接口方法进行重写
*   抽象类有构造方法，但是不能使用
* ==============================================
  抽象类的作用是什么？
  降低接口实现类对接口实现过程的难度
  因为抽象类可以实现接口的抽象方法，也可以使用具体方法重写接口的抽象方法
  将接口中不需要使用的抽象方法交给抽象类进行完成
  这样接口实现类只需要对接口需要的方法进行重写
* */
public class AbstractClass {
}
//===================================================
//学生01实现学院守则
class student01 implements 学院守则 {
    @Override
    public void 看电影() {

    }
    @Override
    public void 考试后家长签字() {

    }
}
//===================================================
//学生02要实现学院守则，但不想考试后家长签字怎么办？
//可以使用抽象类，抽象类可以实现接口时不用重写方法
class student02 extends 小贩{
    @Override
    public void 看电影() {

    }
}
//抽象类可以实现接口时不用重写方法
//抽象类没有重写的方法，必须由抽象类的子类负责实现
abstract class 小贩 implements 学院守则{
    @Override
    public void 考试后家长签字() {

    }
}