DK9接口可定义内容
接口中可以定义：
官方解释：Java接口是一系列方法的声明，是一些方法特征的集合，
一个接口只有方法的特征没有方法的实现，因此这些方法可以在不同的地方被不同的类实现，
而这些实现可以具有不同的行为（功能）。

我的解释：接口可以理解为一种特殊的类，里面全部是由全局常量和公共的抽象方法所组成。
接口是解决Java无法使用多继承的一种手段，但是接口在实际中更多的作用是制定标准的。
或者我们可以直接把接口理解为100%的抽象类，既接口中的方法必须全部是抽象方法。（JDK1.8之前可以这样理解）


https://liuyangjun.blog.csdn.net/article/details/80259836


1、成员变量。接口中的成员变量默认是以public static final 来修饰，严格来说就是常量。（三个修饰可以写其一，其二或都不写，系统默认加）
2、抽象方法。接口中的抽象方法默认是以public abstract 来修改。（两个修饰符可写其一、其二或不写，系统默认加。）
3、静态方法。jdk1.8新特性，接口中允许定义静态方法。
4、默认方法。jdk1.8新特性，接口中允许定义默认方法。
5、普通私有方法。jdk1.9新特性，接口中允许定义普通私有方法。
======================================================================
接口中每一个方法也是隐式抽象的,接口中的方法会被隐式的指定为 public abstract
（只能是 public abstract，其他修饰符都会报错）。
接口中可以含有变量，但是接口中的变量会被隐式的指定为 public static final 变量
（并且只能是 public，用 private 修饰会报编译错误）。
接口中的方法是不能在接口中实现的，只能由实现接口的类来实现接口中的方法。


[可见度] interface 接口名称 [extends 其他的接口名] {
        // 声明变量
        // 抽象方法
}

接口是隐式抽象的，当声明一个接口的时候，不必使用abstract关键字。
接口中每一个方法也是隐式抽象的，声明时同样不需要abstract关键字。
接口中的方法都是公有的。
            Animal.java 文件代码：
            /* 文件名 : Animal.java */
            interface Animal {
               public void eat();
               public void travel();
            }

抽象类和接口的区别
1. 抽象类中的方法可以有方法体，就是能实现方法的具体功能，但是接口中的方法不行。
2. 抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是 public static final 类型的。
3. 接口中不能含有静态代码块以及静态方法(用 static 修饰的方法)，而抽象类是可以有静态代码块和静态方法。
4. 一个类只能继承一个抽象类，而一个类却可以实现多个接口。
注：JDK 1.8 以后，接口里可以有静态方法和方法体了。
