package JavaBasicKnowledge.CollectionMapBase.Collection.CollectionBaseKnowledge;

/**
 * 1.集合概述：
 *      1.1什么是集合，有什么用处？
 *      数组其实就是一个集合，集合实际上就是一个容器，可以容纳其他类型的数据
 *          集合为什么说在开发中使用较多
 *              集合是一个容器，是一个载体，可以一次容纳多个对象
 *              在实际开发中，假设连接数据库，数据库当中有10条记录
 *              那么假设把这10条记录查询出来，在java程序中会将10条数据
 *              封装成10个java对象，然后将10个java对象放在某一个集合当中
 *              将集合传到前端，然后遍历集合，将数据一个一个的展现出来
 *      1.2注意：
 *              集合不能直接存储基本数据类型，另外集合也不能直接存储java对象
 *              集合当中存储的都是java对象的内存地址（或者说集合当中存储的是引用）
 *
 *              数组存基本数据类型，也是存常量池中的地址
 *              list.add（100）；//自动装箱Integer
 *              注意：
 *                  集合在java中本身是一个容易，是一个对象
 *                  集合中任何时候存储的都是引用
 *                  集合也是一个对象，也有内存地址
 *      1.3
 *          在java中每一个不同的集合，底层都会对应不同的数据结构。往不同的集合中存储元素等于将数据存储到不同的数据结构当中
 *              什么是数据结构？就是数据存储的结构，不同的数据结构，数据存储的方式不同，例如：
 *              数组，二叉树，链表，哈希表。。。。。
 *              这些都是常见的数据结构
 *              你往集合C1中放数据，可能是放到数组上了
 *              你往集合C2中放数据，可能是放到二叉树上了
 *              。。。。。
 *              你使用不同的集合等同于使用了不同的数据结构
 *
 *              你在java集合这一章节，你需要掌握的不是精通数据结构，java已经将常用的数据结构实现了，已经写好了这些常用的数据类
 *              你只需要掌握怎么用？在什么情况下选择哪一种合适的集合去使用
 *                           List list = new ArrayList();
 *                           在这里你创建了一个List集合，底层数据结构是ArrayList，即数组数据结构
 *
 *                            Collection c = new ArrayList();
 *                            在这里你创建了一个 Collection集合，底层数据结构是ArrayList，即数组数据结构
 *
 *                            当然底层可以选择其他的数据结构
 *                             Collection c = new LinkedList();
 *                              Collection c = new TreeSet();
 *
 *
 *              new ArrayList();创建一个集合底层是数组
 *              new LinkedList();创建一个集合底层是链表
 *              new TreeSet();创建一个集合对象，底层是二叉树
 *              。。。。。。。
 *
 *     1.4
 *          集合在java JDK中哪个包下？
 *          java.util.*
 *              所以的集合类和集合接口都在java.util包下
 *     1.5
 *          在java中集合分为两大类：
 *              一类是单个方式存储元素：
 *                  单个方式存储元素，这一类集合中的超级父接口：java.util.Collection
 *
 *              一类是以键值对的方式存储元素(key：value的方式一对一对存储)
 *                  以键值对的方式存储元素，这一类集合中的超级父接口：java.util.Map
 *          例子：
 *              单个方式存储：     张三
 *
 *              键值对的方式存储： 年龄（key）：11（value）
 *
 *     1.6（迭代就是遍历）
 *          所有的集合既然能存储元素，必然要能取出元素，所以设计者设计了一个迭代器用于遍历集合中元素
 *          放到接口Collection的父类Iterable中，让Collection把该功能继承过来
 *
 *     1.7集合存储的特点
 *              List集合存储元素的特点：有序可重复，存储的元素有下标
 *                                  有序实际上是说存进去是这个顺序，取出来还是这个顺序，这里的顺序不是说按照大小排序
 *                                  有序是因为List集合都有下标，下标从0开始，以1递增
 *
 *              set集合存储元素的特点：无序不可重复
 *                                 无序表示存进去是这个顺序，取出来就不一定是这个顺序了，另外set集合中的元素没有下标
 *                                 Set集合中的元素还不能重复
 *
 */
public class BasicKnowledge {
    public static void main(String[] args) {

    }
}
