package JavaBasicKnowledge.Thread.ThreadingBase;

/**
 * 多线程
 *      1.什么是进程，什么是线程
 *          进程是一个应用程序（一个进程是一个软件的执行程序）
 *          线程是一个进程中的执行场景/执行单元
 *          一个进程可以启动多个线程
 *
 *      2.对于java程序来说，当在DOS命令窗口中输入：
 *          java HelloWorld 回车之后
 *          会先启动jvm，而jvm就是一个进程
 *          jvm再启动一个主线程调用main方法，同时再启动一个垃圾回收线程负责看护，回收垃圾
 *          最起码，现在的java程序中至少有两个线程并发，一个是垃圾回收线程，一个是执行main方法的主线程
 *
 *      3.进程和线程是什么关系？举个例子
 *          阿里巴巴：进程
 *              马云：阿里巴巴的一个线程
 *              佟文鸿：阿里巴巴的一个线程
 *         京东：进程
 *              强东：京东的一个线程
 *              奶茶妹妹：京东的一个线程
 *         进程可以看作是现实生活当中的公司
 *         线程可以看作是公司当中的某个员工
 *         注意：进程A和进程B的内存独立不共享（阿里巴巴和京东资源不会共享）
 *              魔兽游戏是一个进程
 *              酷狗音乐是一个进程
 *              这两个进程是独立的，不共享资源
 *
 *              线程A和线程B呢？
 *                  线程A和线程B，堆内存和方法区内存多线程共享
 *                  但是栈内存独立，一个线程一个栈内存
 *
 *          假设启动10个线程，会有10个栈内存，每个栈和每个栈之间互不干扰，各自执行各自的，这就是多线程并发
 *
 *          火车站，可以看作是一个进程
 *          火车站中的每一个售票窗口，可以看作是一个线程
 *          我在窗口1购票，你可以在窗口2购票，你不需要等我，我也不需要等你
 *          所以多线程并发可以提高效率
 *          java中之所以有多线程并发，目的就是为了提高程序的处理效率
 *
 *     思考一个问题：
 *      使用了多线程机制之后，main方法结束，是不是有可能程序也不会结束
 *      main方法结束之时，主线程结束了主栈空了，其他线程可能还在压栈弹栈
 *
 *      4.分析一个问题：对于单核的cpu来说，真的可以做到真正的多线程并发吗？
 *          对于多核的cpu电脑来说，真正的多线程并发是没问题的
 *          4核cpu表示同一时间点上，可以真正的有4个线程并发执行
 *          什么是真正的多线程并发？
 *              t1执行t1的
 *              t2执行t2的
 *              t1不会影响t2，t2也不会影响t1，这叫做真正的多线程并发
 *
 *              单核的cpu表示只有一个大脑（cpu时间片抢占机制）：
 *                  不能做到真正的多线程并发，但是可以做到给人一种多线程并发的感觉
 *                  对于单核的cpu来说，在某一个时间点上实际上只能处理一件事情，但是由于cpu的处理
 *                  速度极快，多个线程之间来回频繁切换执行，给人类的感觉是：多个事情同时来做
 *                          线程A：播放音乐
 *                          线程B：运行魔兽世界
 *                          线程A和线程B无法同时执行，只能频繁来回切换，人类会感觉音乐一直在播放，游戏一直在运行
 *                          给我们感觉是同时并发的
 *
 *               电影院采用胶卷播放电影，一个胶卷一个胶卷播放速度达到一定程度之后，
 *               人类的眼睛产生了错觉，感觉是动画的，这说明人类的反应速度是很慢的，就像一根钢针
 *               扎到了手上，到最终感觉到疼痛，这个人类疼痛的过程是对于计算机来说是需要"很长的"时间，
 *               在这个期间计算机可以进行亿万次的循环，所以计算机的执行速度很快
 */
public class ThreadBaseKnowledge {
}
