package JavaBasicKnowledge.sort;

/**
 * 选择排序：
 *      每次从这堆“参与比较的数据当中”找出最小值
 *      拿着这个最小值和“参与比较的这堆最前面的元素”交换位置，每一次交换都是有意义的
 * 关键点：
 *      如何去寻找这个最小的数字？（关注元素）
 *      我们可以把每次外循环的第一个值假设定义成一个所谓的最小值，然后跟剩下的值进行比较，如果有比它更小的就替换掉（类似与猴子掰玉米）
 *   例：3，1，6，2，5
 *          我们把第一个数字3定义为最小值，装进创建的最小值的空容器内，然后来跟其他值进行比较
 *      我们拿假设的最小值3跟1比发现有更小的值1，这时候盛放最小值的容器内的值就变成了1，然后
 *      我们继续拿着1跟其他剩下的值往下按照这样的方法比较，发现最小的值就是1
 *      这时候我们就把1和最左边的值进行交换位置
 *
 *      3，6，2，5
 *          我们仍然假设每次外循环最开始的第一个值为最小值，即3为最小值
 *          按照以上方法，发现2是最小的，将最小值与第一个元素交换位置
 *
 *      6，3，5
 *          同理，按照上述方法将最小值3和第一个位置的元素6交换位置
 *
 *      6，5
 *          同理
 *
 *      6
 *
 *---------------------------------------------------------------------
 * 参与比较的数据：3，2，6，1，5
 * 第一次循环之后的结果是：1，3，2，6，5
 *参与比较的数据：3，2，6，5
 *---------------------
 * 第二次循环之后的结果是：2，3，6，5
 * 参与比较的数据：3，6，5
 * -------------------------
 * 第三次循环之后的结果是：3，6，5
 * 参与比较的数据：6，5
 * -------------------------
 * 第四次循环之后的结果是：5，6
 * 剩余的数据：6
 *
 */
public class SelectSort {
    int[] arr = new int[5];
    public static void main(String[] args) {
        SelectSort s = new SelectSort();
        s.selectSort();
    }
    public void SelectSort(){
        //选择排序
        //5条数据循环4次（外层循环4次）
        for(int i = 0;i<arr.length-1;i++){
            int min = i;
            //i的值正好是0，1，2，3，4
            //i正好是"参加比较的这堆数据中"最左边元素的下标，每次外循环的起始元素
            for(int k = 0;k<arr.length-1-i;k++){
                if(arr[i + k + 1]<arr[min]){
                    min = i + k + 1;
                }
            }
        }
    }

    /**
     * ----------------------------------------------------------------------------------------------------------
     */
    public void selectSort() {
        //选择排序
        //5条数据循环4次（外层循环4次）
        for (int i = 0; i < arr.length - 1; i++) {
            //创建一个空容器承装最小值
            int min = i;
            //i的值正好是0，1，2，3，4
            //i正好是"参加比较的这堆数据中"最左边元素的下标，每次外循环的起始元素
            /**
             * --------------------判断最小值代码-----------------
             */
            for (int k = i+1; k < arr.length; k++) {
                if (arr[k]<arr[min]) {
                    min = k;//判断出最小值了
                }
            }
            /**
             * -------------------交换位置代码----------------------
             */
            //当第一个值恰好是最小值时，上述循环内的判断语句并未执行，min = i，不用交换位置
            //当第一个值与最小值arr[min]不等时，表示存在更小的数据，min产生变化，即min=k，交换位置
            if (min!=i){
                int temp;
                temp = arr[i];
                arr[i] = arr[min];
                arr[min] = temp;
            }
        }
        /**
         * --------------------数组遍历---------------------
         */
        for(int i= 0; i < arr.length;i++){
            System.out.println(arr[i]);
        }
    }
}
